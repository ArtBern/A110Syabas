diff -Naur --exclude=CVS --exclude='*.o' --exclude='*.a' --exclude='*.so' --exclude='*.elf' --exclude=System.map --exclude=Makefile.d --exclude='*log' --exclude='*log2' --exclude='*~' --exclude='.*~' --exclude='.#*' --exclude='*.bak' --exclude='*.orig' --exclude='*.rej' --exclude='core.[0-9]*' --exclude=.depend --exclude='.*.o.flags' --exclude='*.gz' --exclude=.depend --exclude='.*.o.flags' --exclude='*.gz' --exclude=vmlinux --exclude=vmlinux.bin --exclude=yamon-02.06-SIGMADESIGNS-01_el.bin linuxmips-2.4.30.ref/arch/mips/config-tango2.in linuxmips-2.4.30/arch/mips/config-tango2.in
--- linuxmips-2.4.30.ref/arch/mips/config-tango2.in	2007-07-06 10:04:19.000000000 -0700
+++ linuxmips-2.4.30/arch/mips/config-tango2.in	2007-07-06 13:05:00.000000000 -0700
@@ -70,5 +70,10 @@
  
 define_bool CONFIG_SD_IPFILTER y
 
+if [ "$CONFIG_TANGO2_XENV" = "y" ]; then
+	define_bool CONFIG_CRYPTO y
+	define_bool CONFIG_CRYPTO_SHA1 y
+fi
+
 endmenu
 
diff -Naur --exclude=CVS --exclude='*.o' --exclude='*.a' --exclude='*.so' --exclude='*.elf' --exclude=System.map --exclude=Makefile.d --exclude='*log' --exclude='*log2' --exclude='*~' --exclude='.*~' --exclude='.#*' --exclude='*.bak' --exclude='*.orig' --exclude='*.rej' --exclude='core.[0-9]*' --exclude=.depend --exclude='.*.o.flags' --exclude='*.gz' --exclude=.depend --exclude='.*.o.flags' --exclude='*.gz' --exclude=vmlinux --exclude=vmlinux.bin --exclude=yamon-02.06-SIGMADESIGNS-01_el.bin linuxmips-2.4.30.ref/arch/mips/tango2/full_sha1.c linuxmips-2.4.30/arch/mips/tango2/full_sha1.c
--- linuxmips-2.4.30.ref/arch/mips/tango2/full_sha1.c	2007-07-06 10:04:19.000000000 -0700
+++ linuxmips-2.4.30/arch/mips/tango2/full_sha1.c	2007-07-06 12:53:33.000000000 -0700
@@ -8,7 +8,7 @@
 #include "util.h"
 #endif
 
-#include "sha1sum.h"
+#include "sha1.h"
 
 #if defined(CONFIG_XENV_SUPPORT) || defined(CONFIG_TANGO2_XENV)
 
@@ -36,13 +36,7 @@
 
 void full_sha1(RMuint32 digest[5],const RMuint8 *src,RMuint32 size,RMuint32 fromISP)
 {
-#if 0
-	if (fromISP) sink(); // unsupported
-#else
-	if (fromISP) return; // unsupported
-#endif
-
-	sha1sum(src, size, digest);
+	sha1_full(digest, src, size);
 }
 #endif /* CONFIG_XENV_SUPPORT */
 
diff -Naur --exclude=CVS --exclude='*.o' --exclude='*.a' --exclude='*.so' --exclude='*.elf' --exclude=System.map --exclude=Makefile.d --exclude='*log' --exclude='*log2' --exclude='*~' --exclude='.*~' --exclude='.#*' --exclude='*.bak' --exclude='*.orig' --exclude='*.rej' --exclude='core.[0-9]*' --exclude=.depend --exclude='.*.o.flags' --exclude='*.gz' --exclude=.depend --exclude='.*.o.flags' --exclude='*.gz' --exclude=vmlinux --exclude=vmlinux.bin --exclude=yamon-02.06-SIGMADESIGNS-01_el.bin linuxmips-2.4.30.ref/arch/mips/tango2/Makefile linuxmips-2.4.30/arch/mips/tango2/Makefile
--- linuxmips-2.4.30.ref/arch/mips/tango2/Makefile	2007-07-06 10:04:19.000000000 -0700
+++ linuxmips-2.4.30/arch/mips/tango2/Makefile	2007-07-06 12:51:15.000000000 -0700
@@ -15,7 +15,7 @@
 obj-y    := tango2IRQ.o setup.o prom.o gbus_standalone.o irq.o tango2controllers.o delay.o tango2api.o
 
 ifdef CONFIG_TANGO2_XENV
-obj-y	+= sha1sum.o xenv.o full_sha1.o
+obj-y	+= sha1.o xenv.o full_sha1.o
 endif
 
 ifdef CONFIG_PCI
diff -Naur --exclude=CVS --exclude='*.o' --exclude='*.a' --exclude='*.so' --exclude='*.elf' --exclude=System.map --exclude=Makefile.d --exclude='*log' --exclude='*log2' --exclude='*~' --exclude='.*~' --exclude='.#*' --exclude='*.bak' --exclude='*.orig' --exclude='*.rej' --exclude='core.[0-9]*' --exclude=.depend --exclude='.*.o.flags' --exclude='*.gz' --exclude=.depend --exclude='.*.o.flags' --exclude='*.gz' --exclude=vmlinux --exclude=vmlinux.bin --exclude=yamon-02.06-SIGMADESIGNS-01_el.bin linuxmips-2.4.30.ref/arch/mips/tango2/sha1.c linuxmips-2.4.30/arch/mips/tango2/sha1.c
--- linuxmips-2.4.30.ref/arch/mips/tango2/sha1.c	1969-12-31 16:00:00.000000000 -0800
+++ linuxmips-2.4.30/arch/mips/tango2/sha1.c	2007-07-06 13:01:51.000000000 -0700
@@ -0,0 +1,26 @@
+
+#include <linux/config.h>
+#include <linux/init.h>
+#include <linux/module.h>
+#include <linux/mm.h>
+#include <linux/crypto.h>
+#include <asm/scatterlist.h>
+#include <asm/byteorder.h>
+
+#include "sha1.h"
+	
+#ifdef CONFIG_TANGO2_XENV
+void __init sha1_full(u8 *digest, const u8 *src, u32 len)
+{
+	struct sha1_ctx ctx;
+	int i;
+
+	sha1_init(&ctx);
+	sha1_update(&ctx, src, len);
+	sha1_final(&ctx, digest);
+
+	for (i = 0; i < SHA1_DIGEST_SIZE / 2; i++)
+		digest[i] = digest[SHA1_DIGEST_SIZE - i - 1];
+}
+#endif
+
diff -Naur --exclude=CVS --exclude='*.o' --exclude='*.a' --exclude='*.so' --exclude='*.elf' --exclude=System.map --exclude=Makefile.d --exclude='*log' --exclude='*log2' --exclude='*~' --exclude='.*~' --exclude='.#*' --exclude='*.bak' --exclude='*.orig' --exclude='*.rej' --exclude='core.[0-9]*' --exclude=.depend --exclude='.*.o.flags' --exclude='*.gz' --exclude=.depend --exclude='.*.o.flags' --exclude='*.gz' --exclude=vmlinux --exclude=vmlinux.bin --exclude=yamon-02.06-SIGMADESIGNS-01_el.bin linuxmips-2.4.30.ref/arch/mips/tango2/sha1.h linuxmips-2.4.30/arch/mips/tango2/sha1.h
--- linuxmips-2.4.30.ref/arch/mips/tango2/sha1.h	1969-12-31 16:00:00.000000000 -0800
+++ linuxmips-2.4.30/arch/mips/tango2/sha1.h	2007-07-06 13:10:15.000000000 -0700
@@ -0,0 +1,22 @@
+
+#ifndef __SHA1_H__
+#define __SHA1_H__
+
+#ifdef CONFIG_CRYPTO_SHA1 
+#define SHA1_DIGEST_SIZE        20
+
+struct sha1_ctx {
+	u64 count;
+        u32 state[5];
+        u8 buffer[64];
+};
+
+void sha1_init(void *ctx);
+void sha1_update(void *ctx, const u8 *data, unsigned int len);
+void sha1_final(void* ctx, u8 *out);
+
+void sha1_full(u8 *digest, const u8 *src, u32 len);
+#endif
+
+#endif
+
diff -Naur --exclude=CVS --exclude='*.o' --exclude='*.a' --exclude='*.so' --exclude='*.elf' --exclude=System.map --exclude=Makefile.d --exclude='*log' --exclude='*log2' --exclude='*~' --exclude='.*~' --exclude='.#*' --exclude='*.bak' --exclude='*.orig' --exclude='*.rej' --exclude='core.[0-9]*' --exclude=.depend --exclude='.*.o.flags' --exclude='*.gz' --exclude=.depend --exclude='.*.o.flags' --exclude='*.gz' --exclude=vmlinux --exclude=vmlinux.bin --exclude=yamon-02.06-SIGMADESIGNS-01_el.bin linuxmips-2.4.30.ref/arch/mips/tango2/sha1sum.c linuxmips-2.4.30/arch/mips/tango2/sha1sum.c
--- linuxmips-2.4.30.ref/arch/mips/tango2/sha1sum.c	2007-07-06 10:04:19.000000000 -0700
+++ linuxmips-2.4.30/arch/mips/tango2/sha1sum.c	1969-12-31 16:00:00.000000000 -0800
@@ -1,350 +0,0 @@
-/* sha1sum.c - print SHA-1 Message-Digest Algorithm 
- * Copyright (C) 1998, 1999, 2000, 2001 Free Software Foundation, Inc.
- * Copyright (C) 2004 g10 Code GmbH
- *
- * This program is free software; you can redistribute it and/or modify it
- * under the terms of the GNU General Public License as published by the
- * Free Software Foundation; either version 2, or (at your option) any
- * later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software Foundation,
- * Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
- */
-
-/* SHA-1 coden take from gnupg 1.3.92. 
-
-   Note, that this is a simple tool to be used for MS Windows.
-*/
-
-#if 0
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-#include <assert.h>
-#include <errno.h>
-#else
-#ifdef __KERNEL__
-#include <linux/config.h>
-#include <linux/string.h>
-#else
-#include "zbootcfg.h"
-#include "util.h"
-#include "uart.h"
-#endif
-#include "sha1sum.h"
-#endif
-
-#if defined(CONFIG_XENV_SUPPORT) || defined(CONFIG_TANGO2_XENV)
-
-#undef BIG_ENDIAN_HOST
-#ifndef __KERNEL__
-typedef unsigned int u32;
-#endif
-
-/****************
- * Rotate a 32 bit integer by n bytes
- */
-#if defined(__GNUC__) && defined(__i386__)
-static inline u32
-rol( u32 x, int n)
-{
-	__asm__("roll %%cl,%0"
-		:"=r" (x)
-		:"0" (x),"c" (n));
-	return x;
-}
-#else
-#define rol(x,n) ( ((x) << (n)) | ((x) >> (32-(n))) )
-#endif
-
-
-typedef struct {
-    u32  h0,h1,h2,h3,h4;
-    u32  nblocks;
-    unsigned char buf[64];
-    int  count;
-} SHA1_CONTEXT;
-
-
-
-static void
-sha1_init( SHA1_CONTEXT *hd )
-{
-    hd->h0 = 0x67452301;
-    hd->h1 = 0xefcdab89;
-    hd->h2 = 0x98badcfe;
-    hd->h3 = 0x10325476;
-    hd->h4 = 0xc3d2e1f0;
-    hd->nblocks = 0;
-    hd->count = 0;
-}
-
-
-/****************
- * Transform the message X which consists of 16 32-bit-words
- */
-static void
-transform( SHA1_CONTEXT *hd, const unsigned char *data )
-{
-    u32 a,b,c,d,e,tm;
-    u32 x[16];
-
-    /* get values from the chaining vars */
-    a = hd->h0;
-    b = hd->h1;
-    c = hd->h2;
-    d = hd->h3;
-    e = hd->h4;
-
-#ifdef BIG_ENDIAN_HOST
-    memcpy( x, data, 64 );
-#else
-    { int i;
-      unsigned char *p2;
-      for(i=0, p2=(unsigned char*)x; i < 16; i++, p2 += 4 ) {
-	p2[3] = *data++;
-	p2[2] = *data++;
-	p2[1] = *data++;
-	p2[0] = *data++;
-      }
-    }
-#endif
-
-
-#define K1  0x5A827999L
-#define K2  0x6ED9EBA1L
-#define K3  0x8F1BBCDCL
-#define K4  0xCA62C1D6L
-#define F1(x,y,z)   ( z ^ ( x & ( y ^ z ) ) )
-#define F2(x,y,z)   ( x ^ y ^ z )
-#define F3(x,y,z)   ( ( x & y ) | ( z & ( x | y ) ) )
-#define F4(x,y,z)   ( x ^ y ^ z )
-
-
-#define M(i) ( tm =   x[i&0x0f] ^ x[(i-14)&0x0f] \
-		    ^ x[(i-8)&0x0f] ^ x[(i-3)&0x0f] \
-	       , (x[i&0x0f] = rol(tm,1)) )
-
-#define R(a,b,c,d,e,f,k,m)  do { e += rol( a, 5 )     \
-				      + f( b, c, d )  \
-				      + k	      \
-				      + m;	      \
-				 b = rol( b, 30 );    \
-			       } while(0)
-    R( a, b, c, d, e, F1, K1, x[ 0] );
-    R( e, a, b, c, d, F1, K1, x[ 1] );
-    R( d, e, a, b, c, F1, K1, x[ 2] );
-    R( c, d, e, a, b, F1, K1, x[ 3] );
-    R( b, c, d, e, a, F1, K1, x[ 4] );
-    R( a, b, c, d, e, F1, K1, x[ 5] );
-    R( e, a, b, c, d, F1, K1, x[ 6] );
-    R( d, e, a, b, c, F1, K1, x[ 7] );
-    R( c, d, e, a, b, F1, K1, x[ 8] );
-    R( b, c, d, e, a, F1, K1, x[ 9] );
-    R( a, b, c, d, e, F1, K1, x[10] );
-    R( e, a, b, c, d, F1, K1, x[11] );
-    R( d, e, a, b, c, F1, K1, x[12] );
-    R( c, d, e, a, b, F1, K1, x[13] );
-    R( b, c, d, e, a, F1, K1, x[14] );
-    R( a, b, c, d, e, F1, K1, x[15] );
-    R( e, a, b, c, d, F1, K1, M(16) );
-    R( d, e, a, b, c, F1, K1, M(17) );
-    R( c, d, e, a, b, F1, K1, M(18) );
-    R( b, c, d, e, a, F1, K1, M(19) );
-    R( a, b, c, d, e, F2, K2, M(20) );
-    R( e, a, b, c, d, F2, K2, M(21) );
-    R( d, e, a, b, c, F2, K2, M(22) );
-    R( c, d, e, a, b, F2, K2, M(23) );
-    R( b, c, d, e, a, F2, K2, M(24) );
-    R( a, b, c, d, e, F2, K2, M(25) );
-    R( e, a, b, c, d, F2, K2, M(26) );
-    R( d, e, a, b, c, F2, K2, M(27) );
-    R( c, d, e, a, b, F2, K2, M(28) );
-    R( b, c, d, e, a, F2, K2, M(29) );
-    R( a, b, c, d, e, F2, K2, M(30) );
-    R( e, a, b, c, d, F2, K2, M(31) );
-    R( d, e, a, b, c, F2, K2, M(32) );
-    R( c, d, e, a, b, F2, K2, M(33) );
-    R( b, c, d, e, a, F2, K2, M(34) );
-    R( a, b, c, d, e, F2, K2, M(35) );
-    R( e, a, b, c, d, F2, K2, M(36) );
-    R( d, e, a, b, c, F2, K2, M(37) );
-    R( c, d, e, a, b, F2, K2, M(38) );
-    R( b, c, d, e, a, F2, K2, M(39) );
-    R( a, b, c, d, e, F3, K3, M(40) );
-    R( e, a, b, c, d, F3, K3, M(41) );
-    R( d, e, a, b, c, F3, K3, M(42) );
-    R( c, d, e, a, b, F3, K3, M(43) );
-    R( b, c, d, e, a, F3, K3, M(44) );
-    R( a, b, c, d, e, F3, K3, M(45) );
-    R( e, a, b, c, d, F3, K3, M(46) );
-    R( d, e, a, b, c, F3, K3, M(47) );
-    R( c, d, e, a, b, F3, K3, M(48) );
-    R( b, c, d, e, a, F3, K3, M(49) );
-    R( a, b, c, d, e, F3, K3, M(50) );
-    R( e, a, b, c, d, F3, K3, M(51) );
-    R( d, e, a, b, c, F3, K3, M(52) );
-    R( c, d, e, a, b, F3, K3, M(53) );
-    R( b, c, d, e, a, F3, K3, M(54) );
-    R( a, b, c, d, e, F3, K3, M(55) );
-    R( e, a, b, c, d, F3, K3, M(56) );
-    R( d, e, a, b, c, F3, K3, M(57) );
-    R( c, d, e, a, b, F3, K3, M(58) );
-    R( b, c, d, e, a, F3, K3, M(59) );
-    R( a, b, c, d, e, F4, K4, M(60) );
-    R( e, a, b, c, d, F4, K4, M(61) );
-    R( d, e, a, b, c, F4, K4, M(62) );
-    R( c, d, e, a, b, F4, K4, M(63) );
-    R( b, c, d, e, a, F4, K4, M(64) );
-    R( a, b, c, d, e, F4, K4, M(65) );
-    R( e, a, b, c, d, F4, K4, M(66) );
-    R( d, e, a, b, c, F4, K4, M(67) );
-    R( c, d, e, a, b, F4, K4, M(68) );
-    R( b, c, d, e, a, F4, K4, M(69) );
-    R( a, b, c, d, e, F4, K4, M(70) );
-    R( e, a, b, c, d, F4, K4, M(71) );
-    R( d, e, a, b, c, F4, K4, M(72) );
-    R( c, d, e, a, b, F4, K4, M(73) );
-    R( b, c, d, e, a, F4, K4, M(74) );
-    R( a, b, c, d, e, F4, K4, M(75) );
-    R( e, a, b, c, d, F4, K4, M(76) );
-    R( d, e, a, b, c, F4, K4, M(77) );
-    R( c, d, e, a, b, F4, K4, M(78) );
-    R( b, c, d, e, a, F4, K4, M(79) );
-
-    /* Update chaining vars */
-    hd->h0 += a;
-    hd->h1 += b;
-    hd->h2 += c;
-    hd->h3 += d;
-    hd->h4 += e;
-}
-
-
-/* Update the message digest with the contents
- * of INBUF with length INLEN.
- */
-static void
-sha1_write( SHA1_CONTEXT *hd, const unsigned char *inbuf, size_t inlen)
-{
-    if( hd->count == 64 ) { /* flush the buffer */
-	transform( hd, hd->buf );
-	hd->count = 0;
-	hd->nblocks++;
-    }
-    if( !inbuf )
-	return;
-    if( hd->count ) {
-	for( ; inlen && hd->count < 64; inlen-- )
-	    hd->buf[hd->count++] = *inbuf++;
-	sha1_write( hd, NULL, 0 );
-	if( !inlen )
-	    return;
-    }
-
-    while( inlen >= 64 ) {
-	transform( hd, inbuf );
-	hd->count = 0;
-	hd->nblocks++;
-	inlen -= 64;
-	inbuf += 64;
-    }
-    for( ; inlen && hd->count < 64; inlen-- )
-	hd->buf[hd->count++] = *inbuf++;
-}
-
-
-/* The routine final terminates the computation and
- * returns the digest.
- * The handle is prepared for a new cycle, but adding bytes to the
- * handle will the destroy the returned buffer.
- * Returns: 20 bytes representing the digest.
- */
-
-static void
-sha1_final(SHA1_CONTEXT *hd)
-{
-    u32 t, msb, lsb;
-    unsigned char *p;
-
-    sha1_write(hd, NULL, 0); /* flush */;
-
-    t = hd->nblocks;
-    /* multiply by 64 to make a byte count */
-    lsb = t << 6;
-    msb = t >> 26;
-    /* add the count */
-    t = lsb;
-    if( (lsb += hd->count) < t )
-	msb++;
-    /* multiply by 8 to make a bit count */
-    t = lsb;
-    lsb <<= 3;
-    msb <<= 3;
-    msb |= t >> 29;
-
-    if( hd->count < 56 ) { /* enough room */
-	hd->buf[hd->count++] = 0x80; /* pad */
-	while( hd->count < 56 )
-	    hd->buf[hd->count++] = 0;  /* pad */
-    }
-    else { /* need one extra block */
-	hd->buf[hd->count++] = 0x80; /* pad character */
-	while( hd->count < 64 )
-	    hd->buf[hd->count++] = 0;
-	sha1_write(hd, NULL, 0);  /* flush */;
-	memset(hd->buf, 0, 56 ); /* fill next block with zeroes */
-    }
-    /* append the 64 bit count */
-    hd->buf[56] = msb >> 24;
-    hd->buf[57] = msb >> 16;
-    hd->buf[58] = msb >>  8;
-    hd->buf[59] = msb	   ;
-    hd->buf[60] = lsb >> 24;
-    hd->buf[61] = lsb >> 16;
-    hd->buf[62] = lsb >>  8;
-    hd->buf[63] = lsb	   ;
-    transform( hd, hd->buf );
-
-    p = hd->buf;
-#ifdef BIG_ENDIAN_HOST
-#define X(a) do { *(u32*)p = hd->h##a ; p += 4; } while(0)
-#else /* little endian */
-#define X(a) do { *p++ = hd->h##a >> 24; *p++ = hd->h##a >> 16;	 \
-		      *p++ = hd->h##a >> 8; *p++ = hd->h##a; } while(0)
-#endif
-    X(0);
-    X(1);
-    X(2);
-    X(3);
-    X(4);
-#undef X
-}
-
-
-void sha1sum(const unsigned char *buffer, size_t n, char sha1[20])
-{
-	SHA1_CONTEXT ctx;
-	int i;
-
-	sha1_init (&ctx);
-	sha1_write (&ctx, buffer, n);
-	sha1_final (&ctx);
-	
-	for(i=0; i<20; i++)
-		sha1[i]=ctx.buf[19-i];
-}
-
-#endif /* CONFIG_XENV_SUPPORT || CONFIG_TANGO2_XENV */
-
-/*
-Local Variables:
-compile-command: "cc -Wall -g -o sha1sum sha1sum.c"
-End:
-*/
diff -Naur --exclude=CVS --exclude='*.o' --exclude='*.a' --exclude='*.so' --exclude='*.elf' --exclude=System.map --exclude=Makefile.d --exclude='*log' --exclude='*log2' --exclude='*~' --exclude='.*~' --exclude='.#*' --exclude='*.bak' --exclude='*.orig' --exclude='*.rej' --exclude='core.[0-9]*' --exclude=.depend --exclude='.*.o.flags' --exclude='*.gz' --exclude=.depend --exclude='.*.o.flags' --exclude='*.gz' --exclude=vmlinux --exclude=vmlinux.bin --exclude=yamon-02.06-SIGMADESIGNS-01_el.bin linuxmips-2.4.30.ref/arch/mips/tango2/sha1sum.h linuxmips-2.4.30/arch/mips/tango2/sha1sum.h
--- linuxmips-2.4.30.ref/arch/mips/tango2/sha1sum.h	2007-07-06 10:04:19.000000000 -0700
+++ linuxmips-2.4.30/arch/mips/tango2/sha1sum.h	1969-12-31 16:00:00.000000000 -0800
@@ -1,13 +0,0 @@
-
-#ifndef __SHA1SUM_H__
-#define __SHA1SUM_H__
-
-/* sha1sum.h */
-
-#ifndef CONFIG_TANGO2_XENV
-typedef unsigned int size_t;
-#endif
-
-void sha1sum(const unsigned char *buffer, size_t n, char sha1[20]);
-
-#endif /* __SHA1SUM_H__ */
diff -Naur --exclude=CVS --exclude='*.o' --exclude='*.a' --exclude='*.so' --exclude='*.elf' --exclude=System.map --exclude=Makefile.d --exclude='*log' --exclude='*log2' --exclude='*~' --exclude='.*~' --exclude='.#*' --exclude='*.bak' --exclude='*.orig' --exclude='*.rej' --exclude='core.[0-9]*' --exclude=.depend --exclude='.*.o.flags' --exclude='*.gz' --exclude=.depend --exclude='.*.o.flags' --exclude='*.gz' --exclude=vmlinux --exclude=vmlinux.bin --exclude=yamon-02.06-SIGMADESIGNS-01_el.bin linuxmips-2.4.30.ref/crypto/sha1.c linuxmips-2.4.30/crypto/sha1.c
--- linuxmips-2.4.30.ref/crypto/sha1.c	2003-08-13 10:19:14.000000000 -0700
+++ linuxmips-2.4.30/crypto/sha1.c	2007-07-06 12:58:58.000000000 -0700
@@ -17,6 +17,7 @@
  * any later version.
  *
  */
+#include <linux/config.h>
 #include <linux/init.h>
 #include <linux/module.h>
 #include <linux/mm.h>
@@ -104,7 +105,11 @@
 	memset (block32, 0x00, sizeof block32);
 }
 
+#ifdef CONFIG_TANGO2_XENV
+void sha1_init(void *ctx)
+#else
 static void sha1_init(void *ctx)
+#endif
 {
 	struct sha1_ctx *sctx = ctx;
 	static const struct sha1_ctx initstate = {
@@ -116,7 +121,11 @@
 	*sctx = initstate;
 }
 
+#ifdef CONFIG_TANGO2_XENV
+void sha1_update(void *ctx, const u8 *data, unsigned int len)
+#else
 static void sha1_update(void *ctx, const u8 *data, unsigned int len)
+#endif
 {
 	struct sha1_ctx *sctx = ctx;
 	unsigned int i, j;
@@ -138,7 +147,11 @@
 
 
 /* Add padding and return the message digest. */
+#ifdef CONFIG_TANGO2_XENV
+void sha1_final(void* ctx, u8 *out)
+#else
 static void sha1_final(void* ctx, u8 *out)
+#endif
 {
 	struct sha1_ctx *sctx = ctx;
 	u32 i, j, index, padlen;
diff -Naur --exclude=CVS --exclude='*.o' --exclude='*.a' --exclude='*.so' --exclude='*.elf' --exclude=System.map --exclude=Makefile.d --exclude='*log' --exclude='*log2' --exclude='*~' --exclude='.*~' --exclude='.#*' --exclude='*.bak' --exclude='*.orig' --exclude='*.rej' --exclude='core.[0-9]*' --exclude=.depend --exclude='.*.o.flags' --exclude='*.gz' --exclude=.depend --exclude='.*.o.flags' --exclude='*.gz' --exclude=vmlinux --exclude=vmlinux.bin --exclude=yamon-02.06-SIGMADESIGNS-01_el.bin linuxmips-2.4.30.ref/README.1036.sha1.patch linuxmips-2.4.30/README.1036.sha1.patch
--- linuxmips-2.4.30.ref/README.1036.sha1.patch	1969-12-31 16:00:00.000000000 -0800
+++ linuxmips-2.4.30/README.1036.sha1.patch	2007-07-06 13:12:19.000000000 -0700
@@ -0,0 +1,19 @@
+Feature:
+--------
+Use kernel default SHA1 engine instead of different one.
+
+Prerequisite patch numbers:
+---------------------------
+0000
+1000
+
+Primary author:
+---------------
+YH Lin
+
+Related to which chip version SMP86xx xx=?
+-----------------------------------------
+all
+
+(linux patches) which CONFIG_... are provided:
+----------------------------------------------
